package com.aspire.etl.flowmonitor.dialog;

import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFrame;

import com.aspire.etl.flowdefine.Task;
import com.aspire.etl.flowdefine.TaskType;
import com.aspire.etl.flowdefine.Taskflow;
import com.aspire.etl.tool.TimeUtils;

/**
 * 
 */
public class TaskSimpleDialog extends javax.swing.JDialog {

	private static final long serialVersionUID = 1L;

	public TaskSimpleDialog(JFrame parent) {
		super(parent, true);

		this.parentFrame = parent;
		initComponents();

		this.setTitle("任务属性对话框");
	}

	public void loadValue(Taskflow taskflow,Task task) {
		try {
			this.task = task;
			this.taskflowTF.setText(taskflow.getTaskflow());
			this.taskTypeTF.setText(task.getTaskType());
			this.NameTF.setText(task.getTask());
			this.AlertsourceIDTF.setText(task.getAlertID());
			this.PerformanceidTF.setText(task.getPerformanceID());
			this.DescriptionTF.setText(task.getDescription());
			//this.memoTA.setText(task.getMemo());
//			 禁用状态
			if (this.task.getSuspend() == 0)
				this.isSuspendedLValue.setText("否");
			else if (this.task.getSuspend() == 1)
				this.isSuspendedLValue.setText("是");
			
//			 运行状态
			if (this.task.getStatus() == 0) {
				this.statusLValue1.setText("就绪");
			} else if (this.task.getStatus() == 1) {
				this.statusLValue1.setText("运行");
			} else if (this.task.getStatus() == 2) {
				this.statusLValue1.setText("成功");
			} else if (this.task.getStatus() == -1) {
				this.statusLValue1.setText("失败");
			} else if (this.task.getStatus() == 4) {
				this.statusLValue1.setText("停止");
			}
			
			if (this.task.getSuspend() == 1)
				this.statusLValue1.setText("停止");

			// 运行开始时间
			this.runStartTimeLValue.setText(TimeUtils.toChar(this.task
					.getRunStartTime()));
			// 运行结束时间
			this.runEndTimeLValue.setText(TimeUtils.toChar(this.task
					.getRunEndTime()));
		} catch (Exception ex) {
			Logger.getLogger(TaskSimpleDialog.class.getName()).log(Level.SEVERE,
					null, ex);
		}

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        NameL = new javax.swing.JLabel();
        NameTF = new javax.swing.JTextField();
        DescriptionL = new javax.swing.JLabel();
        DescriptionTF = new javax.swing.JTextField();
        AlertsourceIDL = new javax.swing.JLabel();
        AlertsourceIDTF = new javax.swing.JTextField();
        PerformanceidL = new javax.swing.JLabel();
        PerformanceidTF = new javax.swing.JTextField();
        taskTypeL = new javax.swing.JLabel();
        NameL1 = new javax.swing.JLabel();
        taskflowTF = new javax.swing.JTextField();
        taskTypeTF = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        runStartTimeL = new javax.swing.JLabel();
        runEndTimeL = new javax.swing.JLabel();
        isSuspendedL = new javax.swing.JLabel();
        statusL1 = new javax.swing.JLabel();
        statusLValue1 = new javax.swing.JLabel();
        runStartTimeLValue = new javax.swing.JLabel();
        runEndTimeLValue = new javax.swing.JLabel();
        isSuspendedLValue = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("任务信息"));

        NameL.setText("任务名：");

        NameTF.setEditable(false);
        NameTF.setToolTipText("任务名,不可以输入中文");
        NameTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                NameTFCaretUpdate(evt);
            }
        });

        DescriptionL.setText("描述：");

        DescriptionTF.setEditable(false);
        DescriptionTF.setToolTipText("描述");

        AlertsourceIDL.setText("告警ID：");

        AlertsourceIDTF.setEditable(false);
        AlertsourceIDTF.setToolTipText("告警ID");

        PerformanceidL.setText("性能ID：");

        PerformanceidTF.setEditable(false);
        PerformanceidTF.setToolTipText("性能ID");

        taskTypeL.setText("任务类型：");

        NameL1.setText("流程名：");

        taskflowTF.setEditable(false);
        taskflowTF.setToolTipText("任务名,不可以输入中文");
        taskflowTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                taskflowTFCaretUpdate(evt);
            }
        });

        taskTypeTF.setEditable(false);
        taskTypeTF.setToolTipText("描述");

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel4Layout.createSequentialGroup()
                                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                        .add(DescriptionL)
                                        .add(NameL))
                                    .add(NameL1))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(DescriptionTF, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                                    .add(NameTF, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                                    .add(taskflowTF, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, taskTypeTF, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel4Layout.createSequentialGroup()
                                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(AlertsourceIDL)
                                    .add(PerformanceidL))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(AlertsourceIDTF, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                                    .add(PerformanceidTF, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)))))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, taskTypeL))
                .add(21, 21, 21))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(NameL1)
                    .add(taskflowTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(NameL)
                    .add(NameTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(DescriptionTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(DescriptionL))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(taskTypeL)
                    .add(taskTypeTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(14, 14, 14)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(AlertsourceIDL)
                    .add(AlertsourceIDTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(PerformanceidL)
                    .add(PerformanceidTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setText("关闭");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("最近一次运行信息"));

        runStartTimeL.setText("运行开始时间：");

        runEndTimeL.setText("运行结束时间：");

        isSuspendedL.setText("是否停止：");

        statusL1.setText("运行状态：");

        statusLValue1.setText("READY");

        runStartTimeLValue.setText("2008-04-25 10:32:30");

        runEndTimeLValue.setText("2008-04-25 10:32:32");

        isSuspendedLValue.setText("TRUE");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(runStartTimeL)
                    .add(runEndTimeL))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(runStartTimeLValue)
                    .add(runEndTimeLValue, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(statusL1)
                    .add(isSuspendedL))
                .add(22, 22, 22)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(isSuspendedLValue)
                    .add(statusLValue1))
                .addContainerGap(161, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(runStartTimeL)
                    .add(isSuspendedLValue)
                    .add(runStartTimeLValue)
                    .add(isSuspendedL, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(runEndTimeL)
                    .add(statusLValue1)
                    .add(statusL1)
                    .add(runEndTimeLValue))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(211, 211, 211)
                        .add(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton2)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void taskflowTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_taskflowTFCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_taskflowTFCaretUpdate

	private void NameTFCaretUpdate(javax.swing.event.CaretEvent evt) {// GEN-FIRST:event_NameTFCaretUpdate
		if (isSynInput) {
			this.AlertsourceIDTF.setText(this.NameTF.getText());
			this.PerformanceidTF.setText(this.NameTF.getText());
		}
	}// GEN-LAST:event_NameTFCaretUpdate



	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
		// TODO add your handling code here:
		this.setVisible(false);
	}// GEN-LAST:event_jButton2ActionPerformed


	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {

				javax.swing.JFrame aframe = new javax.swing.JFrame();
				TaskSimpleDialog dialog = new TaskSimpleDialog(aframe);
				dialog.loadValue(new Taskflow(),new Task());
				// dialog.loadValue(task);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AlertsourceIDL;
    private javax.swing.JTextField AlertsourceIDTF;
    private javax.swing.JLabel DescriptionL;
    private javax.swing.JTextField DescriptionTF;
    private javax.swing.JLabel NameL;
    private javax.swing.JLabel NameL1;
    private javax.swing.JTextField NameTF;
    private javax.swing.JLabel PerformanceidL;
    private javax.swing.JTextField PerformanceidTF;
    private javax.swing.JLabel isSuspendedL;
    private javax.swing.JLabel isSuspendedLValue;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel runEndTimeL;
    private javax.swing.JLabel runEndTimeLValue;
    private javax.swing.JLabel runStartTimeL;
    private javax.swing.JLabel runStartTimeLValue;
    private javax.swing.JLabel statusL1;
    private javax.swing.JLabel statusLValue1;
    private javax.swing.JLabel taskTypeL;
    private javax.swing.JTextField taskTypeTF;
    private javax.swing.JTextField taskflowTF;
    // End of variables declaration//GEN-END:variables
	private JFrame parentFrame;

	private Task task;

	private Map<String, String> attributeMap;

	private boolean isSynInput = false;

	private boolean isConfirm = false;

	public boolean isIsConfirm() {
		return isConfirm;
	}

	public void setIsConfirm(boolean isConfirm) {
		this.isConfirm = isConfirm;
	}

	public Map getMap() {
		return attributeMap;
	}

	public void setMap(Map<String, String> map) {
		this.attributeMap = map;
	}

	public Task getTask() {
		return task;
	}

	public void setTask(Task task) {
		this.task = task;
	}

}
