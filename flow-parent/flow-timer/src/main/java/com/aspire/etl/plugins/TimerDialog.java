package com.aspire.etl.plugins;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.text.DateFormatter;
import javax.swing.text.MaskFormatter;

/*
 * TimerDialog.java
 *
 * Created on 2008年10月9日, 下午6:36
 */

/**
 *
 * @author  x_yangzhanyu
 */
public class TimerDialog extends javax.swing.JDialog {

   
	
    /** Creates new form TimerDialog */
    public TimerDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        onTimePanel.setVisible(false);
        onTimeNotePanel.setVisible(false);
        Delay_RBActionPerformed(null);

    }


	private Map<String, String> attributeMap;

	   public TimerDialog(java.awt.Frame parent) {

        super(parent, true);

        this.setTitle("定时器");

        this.setResizable(false);

        initComponents();
        onTimePanel.setVisible(false);
        onTimeNotePanel.setVisible(false);
        Delay_RBActionPerformed(null);
    }

    public void loadValue(Map<String, String> map) {
        this.attributeMap = map;

        if (TimerConstants.TIMER_DATE.equals((String) map.get(TimerConstants.TIMER_TYPE))) {
            jRadioButton1.setSelected(true);
        } else if (TimerConstants.TIMER_HOUR.equals((String) map.get(TimerConstants.TIMER_TYPE))) {
            jRadioButton2.setSelected(true);
        } else if (TimerConstants.TIMER_MINUTE.equals((String) map.get(TimerConstants.TIMER_TYPE))) {
            jRadioButton3.setSelected(true);
        } else if (TimerConstants.TIMER_SECOND.equals((String) map.get(TimerConstants.TIMER_TYPE))) {
            jRadioButton4.setSelected(true);
        }

        if (map.get(TimerConstants.TIMER_VALUE) != null) {
            jTextField1.setText((String) map.get(TimerConstants.TIMER_VALUE));
        }


        if (map.get(TimerConstants.TIMER_MODE) != null && map.get(TimerConstants.TIMER_MODE).equals(TimerConstants.TIME_TIMINGMODE)) {
            OnHour_RB.setSelected(true);
            Delay_RB.setSelected(false);
            OnHour_RBActionPerformed(null);
        } else {
            OnHour_RB.setSelected(false);
            Delay_RB.setSelected(true);
            Delay_RBActionPerformed(null);
        }

        if (map.get(TimerConstants.TIME_REGULAYVALUE) != null) {
            jFormattedTextField1.setText((String) map.get(TimerConstants.TIME_REGULAYVALUE));
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        Delay_RB = new javax.swing.JRadioButton();
        OnHour_RB = new javax.swing.JRadioButton();
        mainPanel = new javax.swing.JPanel();
        intervalPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        onTimePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        MaskFormatter   mf1;
        try {
            mf1 = new MaskFormatter("####-##-## ##:##:##");
            mf1.setPlaceholderCharacter('-');
            jFormattedTextField1 = new javax.swing.JFormattedTextField(mf1);
            onTimeNotePanel = new javax.swing.JPanel();
            jLabel5 = new javax.swing.JLabel();
            jLabel6 = new javax.swing.JLabel();
            jLabel7 = new javax.swing.JLabel();
            intervalNotePanel1 = new javax.swing.JPanel();
            jLabel8 = new javax.swing.JLabel();
            jLabel9 = new javax.swing.JLabel();
            jLabel10 = new javax.swing.JLabel();

            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

            jButton1.setText("确定");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });

            jButton2.setText("取消");
            jButton2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton2ActionPerformed(evt);
                }
            });

            jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("定时方式:"));

            buttonGroup1.add(Delay_RB);
            Delay_RB.setSelected(true);
            Delay_RB.setText("延迟");
            Delay_RB.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    Delay_RBActionPerformed(evt);
                }
            });

            buttonGroup1.add(OnHour_RB);
            OnHour_RB.setText("准点");
            OnHour_RB.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    OnHour_RBActionPerformed(evt);
                }
            });

            org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
            jPanel3.setLayout(jPanel3Layout);
            jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel3Layout.createSequentialGroup()
                    .add(23, 23, 23)
                    .add(Delay_RB)
                    .add(40, 40, 40)
                    .add(OnHour_RB)
                    .addContainerGap(328, Short.MAX_VALUE))
            );
            jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(Delay_RB)
                    .add(OnHour_RB))
            );

            mainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

            jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("时间类型"));

            buttonGroup2.add(jRadioButton1);
            jRadioButton1.setSelected(true);
            jRadioButton1.setText("日");
            jRadioButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            jRadioButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));

            buttonGroup2.add(jRadioButton2);
            jRadioButton2.setText("时");
            jRadioButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            jRadioButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));

            buttonGroup2.add(jRadioButton3);
            jRadioButton3.setText("分");
            jRadioButton3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            jRadioButton3.setMargin(new java.awt.Insets(0, 0, 0, 0));

            buttonGroup2.add(jRadioButton4);
            jRadioButton4.setText("秒");
            jRadioButton4.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
            jRadioButton4.setMargin(new java.awt.Insets(0, 0, 0, 0));

            org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jRadioButton1)
                    .add(43, 43, 43)
                    .add(jRadioButton2)
                    .add(38, 38, 38)
                    .add(jRadioButton3)
                    .add(30, 30, 30)
                    .add(jRadioButton4)
                    .addContainerGap(216, Short.MAX_VALUE))
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel1Layout.createSequentialGroup()
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jRadioButton1)
                        .add(jRadioButton2)
                        .add(jRadioButton3)
                        .add(jRadioButton4))
                    .addContainerGap(20, Short.MAX_VALUE))
            );

            jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("时间值"));

            jTextField1.setText("5");

            org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
            jPanel2.setLayout(jPanel2Layout);
            jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 163, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(280, Short.MAX_VALUE))
            );
            jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup()
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            org.jdesktop.layout.GroupLayout intervalPanelLayout = new org.jdesktop.layout.GroupLayout(intervalPanel);
            intervalPanel.setLayout(intervalPanelLayout);
            intervalPanelLayout.setHorizontalGroup(
                intervalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            intervalPanelLayout.setVerticalGroup(
                intervalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(intervalPanelLayout.createSequentialGroup()
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(13, Short.MAX_VALUE))
            );

            onTimePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("时间设置"));

            jLabel1.setText("时间：");

        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField1.setToolTipText("输入触发时间，格式为：YYYY-MM-DD HH:MI:SS");
        jFormattedTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout onTimePanelLayout = new org.jdesktop.layout.GroupLayout(onTimePanel);
        onTimePanel.setLayout(onTimePanelLayout);
        onTimePanelLayout.setHorizontalGroup(
            onTimePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(onTimePanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jFormattedTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(260, Short.MAX_VALUE))
        );
        onTimePanelLayout.setVerticalGroup(
            onTimePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(onTimePanelLayout.createSequentialGroup()
                .add(onTimePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jFormattedTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLabel5.setText("备注：输入格式为“YYYY-MM-DD HH:MI:SS”,如:2010-01-10 12:30:02");

        jLabel6.setText("当系统时间大于设置的时间点,并且任务尚未运行过,则触发运行,");

        jLabel7.setText("成功执行过一次,则不再运行.");

        org.jdesktop.layout.GroupLayout onTimeNotePanelLayout = new org.jdesktop.layout.GroupLayout(onTimeNotePanel);
        onTimeNotePanel.setLayout(onTimeNotePanelLayout);
        onTimeNotePanelLayout.setHorizontalGroup(
            onTimeNotePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(onTimeNotePanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE))
            .add(onTimeNotePanelLayout.createSequentialGroup()
                .add(45, 45, 45)
                .add(onTimeNotePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(onTimeNotePanelLayout.createSequentialGroup()
                        .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 215, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .add(jLabel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)))
        );
        onTimeNotePanelLayout.setVerticalGroup(
            onTimeNotePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, onTimeNotePanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel7))
        );

        jLabel8.setText("备注：时间值的单位为选择的时间类型,如：如果时间类型选择“日”,");

        jLabel9.setText("则时间值为N天,即延迟N天后才运行通过,时间类型选择“时”,");

        jLabel10.setText("则时间值为N小时,即延迟N小时后才运行通过.");

        org.jdesktop.layout.GroupLayout intervalNotePanel1Layout = new org.jdesktop.layout.GroupLayout(intervalNotePanel1);
        intervalNotePanel1.setLayout(intervalNotePanel1Layout);
        intervalNotePanel1Layout.setHorizontalGroup(
            intervalNotePanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(intervalNotePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE))
            .add(intervalNotePanel1Layout.createSequentialGroup()
                .add(45, 45, 45)
                .add(intervalNotePanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(intervalNotePanel1Layout.createSequentialGroup()
                        .add(jLabel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .add(jLabel9)))
        );
        intervalNotePanel1Layout.setVerticalGroup(
            intervalNotePanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, intervalNotePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel8)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel10))
        );

        org.jdesktop.layout.GroupLayout mainPanelLayout = new org.jdesktop.layout.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPanelLayout.createSequentialGroup()
                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(onTimeNotePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(intervalNotePanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, onTimePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(intervalPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPanelLayout.createSequentialGroup()
                .add(onTimePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(intervalPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(onTimeNotePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(intervalNotePanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(28, 28, 28)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, mainPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(25, 25, 25))
            .add(layout.createSequentialGroup()
                .add(111, 111, 111)
                .add(jButton1)
                .add(29, 29, 29)
                .add(jButton2)
                .addContainerGap(289, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(18, 18, 18)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mainPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(27, 27, 27)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButton1)
                    .add(jButton2))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO 将在此处添加您的处理代码：
	dispose();  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO 将在此处添加您的处理代码：
        boolean islegal = true;

        if (OnHour_RB.isSelected() == true) {
            
            SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            try {
                Date tmpDate = dateformat.parse(this.jFormattedTextField1.getText());
                String strTempDate = dateformat.format(tmpDate);
                //对时间进行判断
                if (!strTempDate.equals(this.jFormattedTextField1.getText())) {
                    JOptionPane.showConfirmDialog(TimerDialog.this, "日期时间输入不正确！", TimerConstants.TIMER_ERROR, JOptionPane.ERROR_MESSAGE);
                    jFormattedTextField1.requestFocus();
                    return;
                }
            } catch (Exception ex) {
                System.out.print(ex);
                JOptionPane.showConfirmDialog(TimerDialog.this, "时间值不能为空！", TimerConstants.TIMER_ERROR, JOptionPane.ERROR_MESSAGE);
                jFormattedTextField1.requestFocus();
                return;
            }

            if (islegal) {
                attributeMap.put(TimerConstants.TIMER_MODE, TimerConstants.TIME_TIMINGMODE);
                attributeMap.put(TimerConstants.TIME_REGULAYVALUE, jFormattedTextField1.getText());
                dispose();
            }
        } else {

            if (jTextField1.getText().equals("")) {
                islegal = false;
                JOptionPane.showMessageDialog(TimerDialog.this, "时间值不能为空！", TimerConstants.TIMER_ERROR, JOptionPane.ERROR_MESSAGE);
                jTextField1.requestFocus();
                return;
            }

            if (islegal) {
                if (!checkNumber(jTextField1.getText())) {
                    islegal = false;
                    JOptionPane.showMessageDialog(TimerDialog.this, "时间值必须为数字！", TimerConstants.TIMER_ERROR, JOptionPane.ERROR_MESSAGE);
                    jTextField1.requestFocus();
                    return;
                }

                if (islegal) {

                    if (jRadioButton1.isSelected() == true) {
                        attributeMap.put(TimerConstants.TIMER_TYPE, TimerConstants.TIMER_DATE);
                    } else if (jRadioButton2.isSelected() == true) {
                        attributeMap.put(TimerConstants.TIMER_TYPE, TimerConstants.TIMER_HOUR);
                    } else if (jRadioButton3.isSelected() == true) {
                        attributeMap.put(TimerConstants.TIMER_TYPE, TimerConstants.TIMER_MINUTE);
                    }else if (jRadioButton4.isSelected() == true){
                    attributeMap.put(TimerConstants.TIMER_TYPE, TimerConstants.TIMER_SECOND);
                    }
                    attributeMap.put(TimerConstants.TIMER_MODE, TimerConstants.DELAY_TIMINGMODE);
                    attributeMap.put(TimerConstants.TIMER_VALUE, jTextField1.getText());

                    dispose();
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Delay_RBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delay_RBActionPerformed
        // TODO add your handling code here:
        onTimePanel.setVisible(false);
        onTimeNotePanel.setVisible(false);
        intervalPanel.setVisible(true);
        intervalNotePanel1.setVisible(true);
        jPanel1.setVisible(true);
        jPanel2.setVisible(true);       
    }//GEN-LAST:event_Delay_RBActionPerformed

    private void jFormattedTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField1ActionPerformed

    private void OnHour_RBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OnHour_RBActionPerformed
        // TODO add your handling code here:
        onTimePanel.setVisible(true);
        onTimeNotePanel.setVisible(true);
        intervalPanel.setVisible(false);
        intervalNotePanel1.setVisible(false);
    }//GEN-LAST:event_OnHour_RBActionPerformed
    
    private boolean checkNumber(String number){   
        String regex = "^[0-9]*[1-9][0-9]*$";   
        Pattern   p   =   Pattern.compile(regex);   
        Matcher   m   =   p.matcher(number);   
        return m.find();   
    }  
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TimerDialog(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Delay_RB;
    private javax.swing.JRadioButton OnHour_RB;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JPanel intervalNotePanel1;
    private javax.swing.JPanel intervalPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel onTimeNotePanel;
    private javax.swing.JPanel onTimePanel;
    // End of variables declaration//GEN-END:variables
    
}
